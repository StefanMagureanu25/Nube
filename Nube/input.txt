import io;

/*	unsigned int = natural
	int = integer
	float/double = real
	string
	char
	*/

PI_NUMBER :: const real = 3.14;

fn suma(a :: int, b :: int) integer
{
	return a + b;
}

fn produs (x :: real, y :: real) nothing
{
	z :: real = x * y;
	io.write(z);
}

fn product(x :: real, y :: real) real
{
	return x * y;
}

fn double(number :: integer) integer
{
	return 2 * number;
}

// daca era fn main() void nu trebuia sa returneze nimic
fn main() integer 
{
	sir :: string = "test";
	x_coord :: real, y_coord :: real;
	io.read(x_coord, y_coord);
	produs(PI_NUMBER, x_coord);
	produs(x_coord, suma(y_coord, PI_NUMBER));
	sum_coord :: integer = suma(suma(x_coord, y_coord), product(x_coord, y_coord));
	quadruple_x_coord:: integer = double(double(x_coord));
	y :: natural = 4;
	x = 3;
	// eroare, deoarece nu a fost declarat un tip pentru x. Poate adaug un sistem de sugestii pentru ce tip ar putea pune ca si warning instead.
	gasit :: boolean = false;
	a :: integer = 5;
	b :: integer[] = [1,3..]
	c :: integer[] = [2,7,8,5,3]
	for index = 0 to (length(c) - 1) step 2
	{
		if c[index] == a
		{
			io.write("Am gasit elementul dorit!\n");
			gasit = true;
			stop; // stop = break. continue o sa ramana la fel
		}
	}
	if gasit == false and y == 4
	{
		io.write("Elementul nu a putut fi gasit!!\n");
	}
	return 0;
}